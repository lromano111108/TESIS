@model List<RubricaWeb.ViewModels.VM_Rubrica>

@{
    //Layout = null;
    //List<RubricaWeb.ViewModels.VM_Estudiante> itemsCurso = (List<RubricaWeb.ViewModels.VM_Estudiante>)ViewBag.listaEstudiantes;
    string nombreMateria = ViewBag.NombreMateria;
    string nombreCurso = ViewBag.NombreCurso;

    List<SelectListItem> combo = (List<SelectListItem>)ViewBag.comboCriterios;

    RubricaWeb.ViewModels.VM_Tema tema = ViewBag.datosTema;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>rubrica</title>
    <link href="~/Content/rubrica.css" rel="stylesheet" id="bootstrap-css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css" integrity="sha384-vp86vTRFVJgpjF9jiIGPEEqYqlDwgyBgEF109VFjmqGmIY/Y4HV4d3Gp2irVfcrp" crossorigin="anonymous">
</head>
<body class="container-fluid">

    @using (Html.BeginForm())
    {
        @*@Html.HiddenFor(Model => Model.IdDocente)idNroTema*@


        @*<div class="col-1 p-0 border">
                @Html.DropDownListFor(model => model[1].Numerotema, new SelectList(combo, "Value", "Text"), "Valor", htmlAttributes: new { @class = "form-control dropdown text-center", @Name = "valorCriterio" })


                @Html.DropDownList("idCombo", combo, "combo", htmlAttributes: new { @class = "form-control", @onchange= "Refresh()" })


            </div>*@

        <div class="container-fluid">

            <div class="row  text-center table-striped">
                <div class="col-1 table-bordered font-weight-bold bg-info ">N°</div>
                <div class="col-3 border font-weight-bold bg-info ">Nombre y Apellido</div>

                @if (tema.DescripcionCriterio1 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0 ">Criterio 1: @Html.Label(tema.DescripcionCriterio1)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info  ">Criterio 1:  @Html.Label(tema.DescripcionCriterio1)</div>
                }

                @if (tema.DescripcionCriterio2 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0">Criterio 2: @Html.Label(tema.DescripcionCriterio2)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info ">Criterio 2: @Html.Label(tema.DescripcionCriterio2)</div>
                }

                @if (tema.DescripcionCriterio3 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0">Criterio 3: @Html.Label(tema.DescripcionCriterio3)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info ">Criterio 3: @Html.Label(tema.DescripcionCriterio3)</div>
                }

                @if (tema.DescripcionCriterio4 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0">Criterio 4: @Html.Label(tema.DescripcionCriterio4)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info ">Criterio 4: @Html.Label(tema.DescripcionCriterio4)</div>
                }

                @if (tema.DescripcionCriterio5 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0">Criterio 5: @Html.Label(tema.DescripcionCriterio5)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info ">Criterio 5: @Html.Label(tema.DescripcionCriterio5)</div>
                }

                @if (tema.DescripcionCriterio6 == "")
                {
                    <div class="col-1 border font-weight-bold bg-info d-none border-0">Criterio 6: @Html.Label(tema.DescripcionCriterio6)</div>
                }
                else
                {
                    <div class="col-1 border font-weight-bold bg-info ">Criterio 6: @Html.Label(tema.DescripcionCriterio6)</div>
                }
                <div class="col-2 border font-weight-bold bg-info ">Nota</div>


            </div>



            @{ int nro = 1;
                for (int i = 0; i < Model.Count; i++)

                {
                        <div class="row text-center">

                            @Html.HiddenFor(Model => Model[i].IdEstudiante, new { })
                            @Html.HiddenFor(Model => Model[i].IdTema, new { })
                            @Html.HiddenFor(Model => Model[i].IdMateria, new { })
                            @Html.HiddenFor(Model => Model[1].IdNroTema, new { })

                            <div class="col-1 border">@(nro++)</div>
                            <div class="col-3 border">@Html.Label(Model[i].NombreEstudiante)</div>

                            @if (tema.DescripcionCriterio1 == "")
                            {
                                <div class="col-1 p-0 border d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio1, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio1), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio1, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio1), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }

                            @if (tema.DescripcionCriterio2 == "")
                            {
                                <div class="col-1 p-0 border d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio2, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio2), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio2, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio2), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }
                            @if (tema.DescripcionCriterio3 == "")
                            {
                                <div class="col-1 p-0 border border-0 d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio3, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio3), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio3, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio3), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }

                            @if (tema.DescripcionCriterio4 == "")
                            {
                                <div class="col-1 p-0 border d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio4, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio4), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio4, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio4), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }

                            @if (tema.DescripcionCriterio5 == "")
                            {
                                <div class="col-1 p-0 border d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio5, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio5), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio5, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio5), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }

                            @if (tema.DescripcionCriterio6 == "")
                            {
                                <div class="col-1 p-0 border d-none"> @Html.DropDownListFor(model => Model[i].ValorCriterio6, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio6), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>

                            }
                            else
                            {
                                <div class="col-1 p-0 border border-0"> @Html.DropDownListFor(model => Model[i].ValorCriterio6, new SelectList(combo, "Value", "Text", Model[i].ValorCriterio6), "", htmlAttributes: new { @class = "form-control dropdown text-center" })</div>
                            }

                            <div class="col-2 p-0 border">@Html.Label(Model[i].Nota.ToString(), htmlAttributes: new { }) </div>





                        </div>
                }
            }
        </div>

        <button class="btn btn-info"  type="submit"> Guardar </button>
        <button class="btn btn-info" type="button" onclick="Refresh()"> verrrr </button>
        <a class="btn btn-info" href="@Url.Action("ListadoTemasCargados", "Rubrica", new  {  @idMateria = tema.IdMateria, @idCurso = tema.Idcurso })">Lista</a>

    }



</body>
</html>


<script>

    //function confirmation() {
    //onclick = "confirmation()"
    //    var resultado = window.confirm('Estas seguro?');
    //    if (resultado === true) {
    //        window.alert('Okay, si estas seguro.');
    //    } else {
    //        window.alert('Pareces indeciso');
    //    }
    //}



    @*Refresh();
    function Refresh() {
        var cboMateria = document.getElementById("idCombo");
        cboMateria.addEventListener("change", Refresh);
fetch("@Url.Content("~/Rubrica/ListadoTemasCargados")" + "?IdMateria=" + cboMateria.value)
window.location.href="@Url.Content("~/Rubrica/ListadoTemasCargados/")" + "?IdMateria=" + cboMateria.value;*@

    
</script>
